#!/usr/bin/python

import sys
import os
from args_parser import parse_args
from connection import connect_and_download
from urlparse import urlparse
import OpenSSL


def validate_options():
    # TODO: Implement
    pass


def validate_url(url):
    if url.scheme != 'https':
        sys.exit("'%s' is not an https url" % url.geturl())


args = parse_args()

ciphers = ""
tls_version = OpenSSL.SSL.TLSv1_2_METHOD
cacert = OpenSSL.crypto.X509
pinnedcertificate = OpenSSL.crypto.X509
allow_stale_certs = 0
url = ""

# Note: To get all the serials of revoked objects, just call
# for rvk in revoked_objects:
#    print rvk.get_serial()
revoked_objects = []

if args["url"]:
    url = args["url"]
if args["ciphers"]:
    ciphers = args["ciphers"]
if args["tlsv1.0"]:
    tls_version = OpenSSL.SSL.TLSv1_METHOD
if args["tlsv1.1"]:
    tls_version = OpenSSL.SSL.TLSv1_1_METHOD
if args["tlsv1.2"]:
    tls_version = OpenSSL.SSL.TLSv1_2_METHOD
if args["sslv3"]:
    tls_version = OpenSSL.SSL.SSLv3_METHOD
if args["crlfile"]:
    try:
        f = open(args["crlfile"]).read()
        crl_object = OpenSSL.crypto.load_crl(OpenSSL.crypto.FILETYPE_PEM, f)
        revoked_objects = crl_object.get_revoked()
    except:
        # Should we just raise an exception or just print an error?
        print "Unable to read crl file"
if args["cacert"]:
    try:
        f = open(args["cacert"]).read()
        cacert = OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_PEM, f)
    except:
        # Should we just raise an exception or just print an error?
        print "Unable to read cacert file"
if args["allow_stale_certs"]:
    allow_stale_certs = args["allow_stale_certs"]
if args["pinnedcertificate"]:
    try:
        f = open(args["pinnedcertificate"]).read()
        cacert = OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_PEM, f)
    except:
        # Should we just raise an exception or just print an error?
        print "Unable to read pinnedcertificate file"

validate_options()

url = urlparse(url)
validate_url(url)

connect_and_download(url)
